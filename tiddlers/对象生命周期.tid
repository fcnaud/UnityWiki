created: 20241021122205419
modified: 20241021175357457
page-cover: 
tags: 坑
title: 对象生命周期
type: text/vnd.tiddlywiki



创建一个 GameObject 对象时，关于这个 GameObject 的信息，都存在于 c++层，c#持有的是这个原生对象的指针。这些 c#对象叫做包装对象。

派生自 UnityEngine.Object 的 c++对象的生命周期都是显式管理的，切换场景或者 Destroy 时这些对象都会被销毁。而 C#对象生命周期则通过 c#的方式，由 GC 管理。

因此，有可能 c#的包装对象存在，但是实际对象已经被销毁了。
Gameobject Destory 后，unity 对象生命周期结束，c#对象生命周期不一定结束，如果此时有引用的话，还是不会被释放。

== 会走 unity 实现的判空逻辑，会判断 c#引用对象和原生对象，比较耗时。

`?:`和`??`运算符无法重载，所以只会进行 c#引用的判断，有可能会出错。

如果只想检测是否已经被赋值，可以使用ReferenceEquals，但是我暂时想不出来什么时候会用这种。
